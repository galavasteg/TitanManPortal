# Generated by Django 3.0.4 on 2020-04-09 12:31

from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('modified_datetime', models.DateTimeField(editable=False)),
                ('email', models.EmailField(error_messages={'unique': 'A user is already registered with this e-mail address.'}, max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('phone_verified', models.BooleanField(default=False, verbose_name='phone verification status')),
                ('email_verified', models.BooleanField(default=False, verbose_name='email verification status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('middle_name', models.CharField(blank=True, max_length=30, verbose_name='middle name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether the user can log in', verbose_name='active')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=users.models.User.path_profile_photo, verbose_name='Photo')),
                ('not_verified_email', models.EmailField(blank=True, error_messages={'unique': 'A user is already registered with this e-mail address.'}, max_length=254, null=True, unique=True, verbose_name='new email address')),
                ('reset_pwd_security_code', models.CharField(max_length=8, null=True, verbose_name='reset pwd code')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
    ]
